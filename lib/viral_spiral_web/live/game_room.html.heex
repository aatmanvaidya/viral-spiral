<div :if={@state == nil}>
  <p>Loading...</p>
</div>

<div :if={@state != nil}>
  <div class="p-4 border-red-200 border-2 rounded-2xl flex flex-row justify-between ">
    <span><%= @state.room.name %></span>
    <div class="flex flex-row gap-2">
    <.popover>
      <:title> Reasons for last changes </:title>
      <:content>
        <div :if={@change_list}>
        <div :for={message <- @change_list }>
          <div><%=message %></div>
        </div>
        </div>
      </:content>
    </.popover>
    <span><%= @state.room.chaos_counter %></span>
    </div>
  
  </div>
  <%!-- <vs-calendar id="cal" phx-hook="CalendarHook"></vs-calendar> --%>
  <div class="mt-2 flex flex-row justify-between">
    <div
      :for={player <- @state.players}
      class={[ 
        "border-2 w-full m-2 bg-clip-border",
        if(player.is_active,
          do: "border-red-400",
          else: "border-red-100"
        )
      ]}
    >
      <div class={[
        "w-full px-2 py-2 flex flex-row gap-4",
        if(player.is_active,
          do: "bg-red-400",
          else: "bg-red-100"
        )
      ]}>
        <p><%= player.name %></p>
        <p><%= player.identity %></p>
      </div>

      <%!-- <span class="ml-6"><%= player.identity %></span> --%>

      <div class="p-2">
        <div class="flex flex-row gap-8 flex-wrap">
          <div>
            <h2 class="font-semibold">Clout</h2>
            <span><%= player.clout %></span>
          </div>

          <div>
            <h2 class="font-semibold">Affinities</h2>
            <div :for={affinity <- player.affinities}>
              <span><%= elem(affinity, 0) %></span>
              <span><%= elem(affinity, 1) %></span>
            </div>
          </div>

          <div>
            <h2 class="font-semibold">Biases</h2>
            <div :for={bias <- player.biases}>
              <span><%= elem(bias, 0) %></span>
              <span><%= elem(bias, 1) %></span>
            </div>
          </div>
        </div>

        <p class="text-sm text-zinc-700">Hand</p>
        <div class="bg-zinc-200 mb-2 flex flex-row gap-1">
          <div class=" overflow-scroll p-1 w-8 h-auto"
            :for={card<- player.hand}
          >
            <.hand_card card={card} />
          </div>
        </div>

        <div class="mt-4"></div>

        <div :for={card <- player.cards} :if={player.is_active}>
          <.card card={card} from={player.id} can_turn_fake={player.power_turn_fake.enabled}/>
        </div>

        <div class="mt-2 mb-2 h-0.5 bg-zinc-400"></div>
        
      </div>

      <div :if={player.is_active && player.power_cancel.can_cancel} class="p-2">
        <button phx-click={show_modal("cancel-initiate-modal")}> Cancel Player </button>

        <.modal id="cancel-initiate-modal">
          <div>

          <.simple_form for={player.power_cancel.form.data} phx-submit="initiate_cancel">
            <.input type="select" 
              field={player.power_cancel.form.data[:target_id]} 
              label="Player" 
              options={player.power_cancel.form.values.targets.options} 
              value={player.power_cancel.form.values.targets.value}  
            />
            
            <.input type="select" field={player.power_cancel.form.data[:affinity]} 
              options={player.power_cancel.form.values.affinity.options} 
              value={player.power_cancel.form.values.affinity.value} 
              label="Affinities"
            />

            <.input type="hidden" name="from_id" value={player.id}/>
            <:actions>
              <.button>Save</.button>
            </:actions>
          </.simple_form>
            
          </div>
          
        
        </.modal>
      </div>

      <div :if={player.power_cancel.can_vote != nil} class="p-2">
        <p> Vote To Cancel </p>
        <div class="flex flex-row gap-2">
        <button
            phx-click="cancel_vote"
            value={
              Jason.encode!(%{
                vote: true,
                from_id: player.id,
              })
            }
            class=" py-1 px-2 bg-[#015058] hover:bg-[#21802B] text-white rounded"
          >
            Yes
          </button>

          <button
            phx-click="cancel_vote"
            value={
              Jason.encode!(%{
                vote: false,
                from_id: player.id,
              })
            }
            class=" py-1 px-2 bg-[#015058] hover:bg-[#21802B] text-white rounded"
          >
            No
          </button>
        </div>
        
        
      </div>

    </div>
  </div>
</div>
